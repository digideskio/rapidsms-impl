#!/bin/sh -e
# ============================================
# celerybeat - Starts the Celerybeat daemon
# ============================================
#
# :Usage: /etc/init.d/celerybeat {start|stop|force-reload|restart|try-restart|status}
#
# :Configuration file: /etc/default/celerybeat
#
### END INIT INFO

set -e

CELERYBEAT_PID_FILE="/tmp/celerybeat.pid"
CELERYBEAT_LOG_FILE="/var/log/celerybeat.log"
CELERYBEAT_LOG_LEVEL="INFO"
DEFAULT_CELERYBEAT="/usr/bin/celerybeat"

# # Where the Django project is.
CELERYBEAT_CHDIR="/home/childcount/sms"
#
# # Name of the projects settings module.
DJANGO_SETTINGS_MODULE="settings"
#
# # Path to celeryd
CELERYBEAT="/home/childcount/sms/rapidsms celerybeat"
# /etc/init.d/ssh: start and stop the celery task worker daemon.

if test -f /etc/default/celerybeat; then
    . /etc/default/celerybeat
fi

CELERYBEAT=${CELERYBEAT:-$DEFAULT_CELERYBEAT}

export CELERY_LOADER

. /lib/lsb/init-functions

CELERYBEAT_OPTS="$CELERYBEAT_OPTS -f $CELERYBEAT_LOG_FILE -l $CELERYBEAT_LOG_LEVEL"

if [ -n "$2" ]; then
CELERYBEAT_OPTS="$CELERYBEAT_OPTS $2"
fi

# Extra start-stop-daemon options, like user/group.
if [ -n "$CELERYBEAT_USER" ]; then
DAEMON_OPTS="$DAEMON_OPTS --chuid $CELERYBEAT_USER"
fi
if [ -n "$CELERYBEAT_GROUP" ]; then
DAEMON_OPTS="$DAEMON_OPTS --group $CELERYBEAT_GROUP"
fi

if [ -n "$CELERYBEAT_CHDIR" ]; then
DAEMON_OPTS="$DAEMON_OPTS --chdir $CELERYBEAT_CHDIR"
fi


# Are we running from init?
run_by_init() {
    ([ "$previous" ] && [ "$runlevel" ]) || [ "$runlevel" = S ]
}


check_dev_null() {
    if [ ! -c /dev/null ]; then
if [ "$1" = log_end_msg ]; then
log_end_msg 1 || true
fi
if ! run_by_init; then
log_action_msg "/dev/null is not a character device!"
    fi
exit 1
    fi
}


export PATH="${PATH:+$PATH:}/usr/sbin:/sbin"


stop_worker () {
    cmd="start-stop-daemon --stop \
--quiet \
$* \
--pidfile $CELERYBEAT_PID_FILE"
    if $cmd; then
log_end_msg 0
    else
log_end_msg 1
    fi
}

start_worker () {
    cmd="start-stop-daemon --start $DAEMON_OPTS \
--make-pidfile \
--background \
$* \
--pidfile $CELERYBEAT_PID_FILE
--exec $CELERYBEAT -- $CELERYBEAT_OPTS"
echo $cmd;
    if $cmd; then
log_end_msg 0
    else
log_end_msg 1
    fi
}



case "$1" in
  start)
    check_dev_null
    log_daemon_msg "Starting celery task worker server" "celerybeat"
    start_worker
    ;;
  stop)
    log_daemon_msg "Stopping celery task worker server" "celerybeat"
    stop_worker --oknodo
    ;;

  reload|force-reload)
    echo "Use start+stop"
    ;;

  restart)
    log_daemon_msg "Restarting celery task worker server" "celerybeat"
    stop_worker --oknodo --retry 30
    check_dev_null log_end_msg
    start_worker
    ;;

  try-restart)
    log_daemon_msg "Restarting celery task worker server" "celerybeat"
    set +e
    stop_worker --retry 30
    RET="$?"
    set -e
    case $RET in
        0)
        # old daemon stopped
        check_dev_null log_end_msg
        start_worker
        ;;
        1)
        # daemon not running
        log_progress_msg "(not running)"
        log_end_msg 0
        ;;
        *)
        # failed to stop
        log_progress_msg "(failed to stop)"
        log_end_msg 1
        ;;
    esac
    ;;

  status)
    status_of_proc -p $CELERYBEAT_PID_FILE $CELERYBEAT celerybeat && exit 0 || exit $?
    ;;

  *)
    log_action_msg "Usage: /etc/init.d/celerybeat {start|stop|force-reload|restart|try-restart|status}"
    exit 1
esac

exit 0

